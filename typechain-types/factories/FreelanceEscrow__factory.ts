/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  FreelanceEscrow,
  FreelanceEscrowInterface,
} from "../FreelanceEscrow";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "jobId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "client",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "freelancer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "JobCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "jobId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "client",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "JobRefunded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "jobId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "freelancer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentReleased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "jobId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "freelancer",
        type: "address",
      },
    ],
    name: "WorkSubmitted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "jobId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "freelancer",
        type: "address",
      },
    ],
    name: "createJob",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "jobId",
        type: "uint256",
      },
    ],
    name: "getJob",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "client",
            type: "address",
          },
          {
            internalType: "address",
            name: "freelancer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "enum FreelanceEscrow.State",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
        ],
        internalType: "struct FreelanceEscrow.Job",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "jobs",
    outputs: [
      {
        internalType: "address",
        name: "client",
        type: "address",
      },
      {
        internalType: "address",
        name: "freelancer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "enum FreelanceEscrow.State",
        name: "state",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "createdAt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "jobId",
        type: "uint256",
      },
    ],
    name: "refundClient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "jobId",
        type: "uint256",
      },
    ],
    name: "releasePayment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "jobId",
        type: "uint256",
      },
    ],
    name: "submitWork",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060016000819055506100283361002d60201b60201c565b6100f3565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611896806101026000396000f3fe6080604052600436106100865760003560e01c806388685cd91161005957806388685cd9146101285780638da5cb5b14610151578063bf22c4571461017c578063c4c11523146101b9578063f2fde38b146101e257610086565b8063096998a91461008b578063180aedf3146100a757806343eed51c146100e8578063715018a614610111575b600080fd5b6100a560048036038101906100a091906110fe565b61020b565b005b3480156100b357600080fd5b506100ce60048036038101906100c9919061113e565b6104f0565b6040516100df959493929190611200565b60405180910390f35b3480156100f457600080fd5b5061010f600480360381019061010a919061113e565b610573565b005b34801561011d57600080fd5b50610126610834565b005b34801561013457600080fd5b5061014f600480360381019061014a919061113e565b6108b5565b005b34801561015d57600080fd5b50610166610b93565b6040516101739190611253565b60405180910390f35b34801561018857600080fd5b506101a3600480360381019061019e919061113e565b610bbd565b6040516101b09190611303565b60405180910390f35b3480156101c557600080fd5b506101e060048036038101906101db919061113e565b610ce5565b005b3480156101ee57600080fd5b506102096004803603810190610204919061131e565b610e42565b005b6000341161024e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610245906113a8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036102bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b490611414565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610362576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035990611480565b60405180910390fd5b6040518060a001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff168152602001348152602001600160038111156103bf576103be611189565b5b8152602001428152506002600084815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548160ff0219169083600381111561049e5761049d611189565b5b021790555060808201518160040155905050817f8f4ee83cefe0dfb2f73fe6057bfa5b233fc43358bbb5f5606f444cbd4c5c4f8c3383346040516104e4939291906114a0565b60405180910390a25050565b60026020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030160009054906101000a900460ff16908060040154905085565b3373ffffffffffffffffffffffffffffffffffffffff16610592610b93565b73ffffffffffffffffffffffffffffffffffffffff16146105e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105df90611523565b60405180910390fd5b60026000540361062d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106249061158f565b60405180910390fd5b60026000819055506000600260008381526020019081526020016000209050600160038111156106605761065f611189565b5b8160030160009054906101000a900460ff16600381111561068457610683611189565b5b146106c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106bb906115fb565b60405180910390fd5b60038160030160006101000a81548160ff021916908360038111156106ec576106eb611189565b5b0217905550817f6a1f355817b0c67f49d69eab66ba0feb8193205ca23b6ba8653427ff2d2790cc8260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836002015460405161074b92919061161b565b60405180910390a260008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1682600201546040516107a190611675565b60006040518083038185875af1925050503d80600081146107de576040519150601f19603f3d011682016040523d82523d6000602084013e6107e3565b606091505b5050905080610827576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081e906116d6565b60405180910390fd5b5050600160008190555050565b3373ffffffffffffffffffffffffffffffffffffffff16610853610b93565b73ffffffffffffffffffffffffffffffffffffffff16146108a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a090611523565b60405180910390fd5b6108b36000610f32565b565b6002600054036108fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f19061158f565b60405180910390fd5b600260008190555060006002600083815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a290611742565b60405180910390fd5b600160038111156109bf576109be611189565b5b8160030160009054906101000a900460ff1660038111156109e3576109e2611189565b5b14610a23576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1a906115fb565b60405180910390fd5b60028160030160006101000a81548160ff02191690836003811115610a4b57610a4a611189565b5b0217905550817f21d71db5be59bb9fa133895586b7404307dd33fb93b16db09dc6f1d9d7d231b08260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168360020154604051610aaa92919061161b565b60405180910390a260008160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168260020154604051610b0090611675565b60006040518083038185875af1925050503d8060008114610b3d576040519150601f19603f3d011682016040523d82523d6000602084013e610b42565b606091505b5050905080610b86576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7d906116d6565b60405180910390fd5b5050600160008190555050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610bc5610ff8565b600260008381526020019081526020016000206040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900460ff166003811115610cbe57610cbd611189565b5b6003811115610cd057610ccf611189565b5b81526020016004820154815250509050919050565b60006002600083815260200190815260200160002090508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d8e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d85906117ae565b60405180910390fd5b60016003811115610da257610da1611189565b5b8160030160009054906101000a900460ff166003811115610dc657610dc5611189565b5b14610e06576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dfd906115fb565b60405180910390fd5b817f2e1034180f85502b3a04560be6ed4c24fe9b9c9e0bd7f4e09720494ac48859fa33604051610e369190611253565b60405180910390a25050565b3373ffffffffffffffffffffffffffffffffffffffff16610e61610b93565b73ffffffffffffffffffffffffffffffffffffffff1614610eb7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eae90611523565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f26576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1d90611840565b60405180910390fd5b610f2f81610f32565b50565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6040518060a00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000600381111561105857611057611189565b5b8152602001600081525090565b600080fd5b6000819050919050565b61107d8161106a565b811461108857600080fd5b50565b60008135905061109a81611074565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110cb826110a0565b9050919050565b6110db816110c0565b81146110e657600080fd5b50565b6000813590506110f8816110d2565b92915050565b6000806040838503121561111557611114611065565b5b60006111238582860161108b565b9250506020611134858286016110e9565b9150509250929050565b60006020828403121561115457611153611065565b5b60006111628482850161108b565b91505092915050565b611174816110c0565b82525050565b6111838161106a565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600481106111c9576111c8611189565b5b50565b60008190506111da826111b8565b919050565b60006111ea826111cc565b9050919050565b6111fa816111df565b82525050565b600060a082019050611215600083018861116b565b611222602083018761116b565b61122f604083018661117a565b61123c60608301856111f1565b611249608083018461117a565b9695505050505050565b6000602082019050611268600083018461116b565b92915050565b611277816110c0565b82525050565b6112868161106a565b82525050565b611295816111df565b82525050565b60a0820160008201516112b1600085018261126e565b5060208201516112c4602085018261126e565b5060408201516112d7604085018261127d565b5060608201516112ea606085018261128c565b5060808201516112fd608085018261127d565b50505050565b600060a082019050611318600083018461129b565b92915050565b60006020828403121561133457611333611065565b5b6000611342848285016110e9565b91505092915050565b600082825260208201905092915050565b7f4d7573742066756e6420657363726f7700000000000000000000000000000000600082015250565b600061139260108361134b565b915061139d8261135c565b602082019050919050565b600060208201905081810360008301526113c181611385565b9050919050565b7f496e76616c696420667265656c616e6365722061646472657373000000000000600082015250565b60006113fe601a8361134b565b9150611409826113c8565b602082019050919050565b6000602082019050818103600083015261142d816113f1565b9050919050565b7f4a6f6220494420616c7265616479206578697374730000000000000000000000600082015250565b600061146a60158361134b565b915061147582611434565b602082019050919050565b600060208201905081810360008301526114998161145d565b9050919050565b60006060820190506114b5600083018661116b565b6114c2602083018561116b565b6114cf604083018461117a565b949350505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061150d60208361134b565b9150611518826114d7565b602082019050919050565b6000602082019050818103600083015261153c81611500565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000611579601f8361134b565b915061158482611543565b602082019050919050565b600060208201905081810360008301526115a88161156c565b9050919050565b7f496e76616c696420737461746500000000000000000000000000000000000000600082015250565b60006115e5600d8361134b565b91506115f0826115af565b602082019050919050565b60006020820190508181036000830152611614816115d8565b9050919050565b6000604082019050611630600083018561116b565b61163d602083018461117a565b9392505050565b600081905092915050565b50565b600061165f600083611644565b915061166a8261164f565b600082019050919050565b600061168082611652565b9150819050919050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b60006116c0600f8361134b565b91506116cb8261168a565b602082019050919050565b600060208201905081810360008301526116ef816116b3565b9050919050565b7f4f6e6c7920636c69656e742063616e2072656c65617365000000000000000000600082015250565b600061172c60178361134b565b9150611737826116f6565b602082019050919050565b6000602082019050818103600083015261175b8161171f565b9050919050565b7f4f6e6c7920667265656c616e6365722063616e207375626d6974000000000000600082015250565b6000611798601a8361134b565b91506117a382611762565b602082019050919050565b600060208201905081810360008301526117c78161178b565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061182a60268361134b565b9150611835826117ce565b604082019050919050565b600060208201905081810360008301526118598161181d565b905091905056fea2646970667358221220b1119a3e57a26a42cb10ad64b2ceb6743f46991824fa7a2686c5885987be3fea64736f6c63430008180033";

type FreelanceEscrowConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FreelanceEscrowConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FreelanceEscrow__factory extends ContractFactory {
  constructor(...args: FreelanceEscrowConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      FreelanceEscrow & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FreelanceEscrow__factory {
    return super.connect(runner) as FreelanceEscrow__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FreelanceEscrowInterface {
    return new Interface(_abi) as FreelanceEscrowInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): FreelanceEscrow {
    return new Contract(address, _abi, runner) as unknown as FreelanceEscrow;
  }
}
